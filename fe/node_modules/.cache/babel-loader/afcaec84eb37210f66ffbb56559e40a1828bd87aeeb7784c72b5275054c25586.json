{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_screenLock = _resolveComponent(\"screenLock\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createBlock(_component_el_dialog, {\n    onOpened: $options.openDialog,\n    modelValue: $setup.dialogVisible,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.dialogVisible = $event),\n    fullscreen: \"\",\n    \"initial-focus\": '#lock',\n    \"show-close\": false,\n    \"lock-scroll\": true,\n    \"close-on-click-modal\": false,\n    \"close-on-press-escape\": false\n  }, {\n    default: _withCtx(() => [_createVNode(_component_screenLock, {\n      ref: \"lockScreen\"\n    }, null, 512 /* NEED_PATCH */)]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onOpened\", \"modelValue\"]);\n}","map":{"version":3,"names":["_createBlock","_component_el_dialog","onOpened","$options","openDialog","$setup","dialogVisible","$event","fullscreen","_createVNode","_component_screenLock","ref"],"sources":["/home/bahl/Downloads/tlr_eprc_sprc_inq_uc3_rpt_eprc/fe/src/components/lockScreenDialog.vue"],"sourcesContent":["<template>\n     <el-dialog @opened=\"openDialog\" v-model=\"dialogVisible\" fullscreen :initial-focus=\"'#lock'\" :show-close=\"false\" :lock-scroll=\"true\" :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\">\n      <screenLock ref=\"lockScreen\" />\n    </el-dialog>\n</template>\n<script>\nimport { computed, nextTick } from 'vue'\nimport screenLock from '../views/LockScreen.vue'\nimport { useStore } from \"vuex\";\nexport default {\n    components: {\n    screenLock,\n  },\n  setup(){\n    const store = useStore();\n    let dialogVisible = computed(function(){\n        return store.getters.getLockScreenVisibility\n    })\n    return{\n        dialogVisible,\n    }\n  },\n  methods:{\n    openDialog() {\n      nextTick(()=>{\n        this.$refs.lockScreen.$refs.lock.input.value=''\n        this.$refs.lockScreen.$refs.lock.focus()\n      })\n      let dia = document.getElementsByClassName('el-dialog')\n      dia[0].setAttribute('id','exampleModal')\n      const focusableElements =\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])';\n      const modal = document.querySelector('#exampleModal'); // select the modal by it's id\n\n      const firstFocusableElement = modal.querySelectorAll(focusableElements)[0]; // get first element to be focused inside modal\n      const focusableContent = modal.querySelectorAll(focusableElements);\n      const lastFocusableElement = focusableContent[focusableContent.length - 1]; // get last element to be focused inside modal\n\n\n      document.addEventListener('keydown', function (e) {\n        let isTabPressed = e.key === 'Tab' || e.keyCode === 9;\n\n        if (!isTabPressed) {\n          return;\n        }\n\n        if (e.shiftKey) { // if shift key pressed for shift + tab combination\n          if (document.activeElement === firstFocusableElement) {\n            lastFocusableElement.focus(); // add focus for the last focusable element\n            e.preventDefault();\n          }\n        } else { // if tab key is pressed\n          if (document.activeElement === lastFocusableElement) { // if focused has reached to last focusable element then focus first focusable element after pressing tab\n            firstFocusableElement.focus(); // add focus for the first focusable element\n            e.preventDefault();\n          }\n        }\n      });\n\n      firstFocusableElement.focus();\n    },\n\n  },\n}\n</script>"],"mappings":";;;;uBACKA,YAAA,CAGWC,oBAAA;IAHCC,QAAM,EAAEC,QAAA,CAAAC,UAAU;gBAAWC,MAAA,CAAAC,aAAa;+DAAbD,MAAA,CAAAC,aAAa,GAAAC,MAAA;IAAEC,UAAU,EAAV,EAAU;IAAE,eAAa,EAAE,OAAO;IAAG,YAAU,EAAE,KAAK;IAAG,aAAW,EAAE,IAAI;IAAG,sBAAoB,EAAE,KAAK;IAC9J,uBAAqB,EAAE;;sBACxB,MAA+B,CAA/BC,YAAA,CAA+BC,qBAAA;MAAnBC,GAAG,EAAC;IAAY,+B"},"metadata":{},"sourceType":"module","externalDependencies":[]}
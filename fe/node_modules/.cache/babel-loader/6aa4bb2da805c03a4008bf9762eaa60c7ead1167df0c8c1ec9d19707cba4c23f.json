{"ast":null,"code":"import { ref } from \"vue\";\nimport { Form, useForm } from \"vee-validate\";\nimport store from '../store/modules/mainMenu.js';\nimport { ElMessageBox } from 'element-plus';\nimport { options } from '../mixins/alertOption.js';\nlet isPasswordComplete = false;\nexport default {\n  components: {\n    Form\n  },\n  setup() {\n    useForm();\n    const userid = ref(store.state.header.loginUserId);\n    const password = ref('');\n    return {\n      userid,\n      password,\n      url: \"../assets/bahl-logo.png\"\n    };\n  },\n  methods: {\n    checkPassword(val) {\n      if (val.target.value !== undefined && val.target.value !== '') {\n        val.target.value = val.target.value.trim();\n        if (!isPasswordComplete && val.target.value.length === 10) {\n          isPasswordComplete = true;\n          this.$store.dispatch('unLockScreen', val.target.value).then(async response => {\n            if (response === true) {\n              this.$store.dispatch('lockScreen', false);\n              val.target.value = '';\n              this.$store.dispatch('savePassword', val.target.value);\n              val.preventDefault();\n              val.stopPropagation();\n            } else {\n              this.resetPassword();\n              this.$store.dispatch('savePassword', val.target.value);\n              await ElMessageBox.alert(response, 'Message', options);\n              val.target.value = '';\n              this.$refs.lock.focus();\n            }\n          }).catch(error => {\n            console.error(error);\n          });\n        }\n      }\n    },\n    resetPassword() {\n      isPasswordComplete = false;\n    }\n  }\n};","map":{"version":3,"names":["ref","Form","useForm","store","ElMessageBox","options","isPasswordComplete","components","setup","userid","state","header","loginUserId","password","url","methods","checkPassword","val","target","value","undefined","trim","length","$store","dispatch","then","response","preventDefault","stopPropagation","resetPassword","alert","$refs","lock","focus","catch","error","console"],"sources":["/home/bahl/MinhajMeraj/Dev Work/Frontend/Portals/EPRC/UseCases/tlr_eprc_sprc_inq_uc3_rpt_eprc/fe/src/views/LockScreen.vue"],"sourcesContent":["<template>\n  <Form as=\"el-form\">\n    <el-row>\n      <el-col :lg=\"2\" :md=\"2\"></el-col>\n      <el-col :lg=\"20\" :md=\"20\">\n        <h1 class=\"mainHeading\">ALHABIB BANKING SYSTEM</h1>\n      </el-col>\n      <el-col :lg=\"2\" :md=\"2\"></el-col>\n    </el-row>\n    <br />\n    <el-row>\n      <el-col :lg=\"3\" :md=\"3\"></el-col>\n      <el-col :lg=\"9\" :md=\"9\">\n        <img src=\"../assets/bahl-logo.png\" class=\"logomain\" alt=\"\" />\n      </el-col>\n      <el-col :lg=\"1\" :md=\"1\"></el-col>\n      <el-col :lg=\"8\" :md=\"8\" class=\"adjustLogin\">\n        <fieldset>\n          <legend>UNLOCK</legend>\n          <el-row :gutter=\"10\">\n            <el-col :lg=\"1\" :md=\"1\"></el-col>\n            <el-col :lg=\"5\" :md=\"5\">\n              <el-form-item :style=\"'font-weight:bold !important; color:black!important; font-size:var(--font-size);--font-size:14px;!important;font-family:Arial!important'\n                \">User ID</el-form-item>\n            </el-col>\n            <el-col :lg=\"17\" :md=\"17\">\n              <el-input disabled maxlength=\"10\" v-model=\"userid\"></el-input>\n            </el-col>\n            <el-col :lg=\"1\" :md=\"1\"></el-col>\n          </el-row>\n          <br>\n          <el-row :gutter=\"10\">\n            <el-col :lg=\"1\" :md=\"1\"></el-col>\n            <el-col :lg=\"5\" :md=\"5\">\n              <el-form-item :style=\"'font-weight:bold !important; color:black!important; font-size:var(--font-size);--font-size:14px;!important;font-family:Arial!important'\n                \">Password</el-form-item>\n            </el-col>\n            <el-col :lg=\"17\" :md=\"17\">\n              <el-input id=\"lock\" ref=\"lock\" @focus=\"this.resetPassword()\" @keyup=\"checkPassword\" maxlength=\"10\" autofocus type=\"password\"\n                v-model=\"password\"></el-input>\n            </el-col>\n            <el-col :lg=\"1\" :md=\"1\"></el-col>\n          </el-row>\n          <br>\n        </fieldset>\n        <br />\n      </el-col>\n      <el-col :lg=\"3\" :md=\"3\"></el-col>\n    </el-row>\n  </Form>\n</template>\n<script>\nimport { ref } from \"vue\";\nimport { Form, useForm } from \"vee-validate\";\nimport store from '../store/modules/mainMenu.js'\nimport { ElMessageBox } from 'element-plus'\nimport { options } from '../mixins/alertOption.js'\nlet isPasswordComplete =  false\nexport default {\n  components: {\n    Form\n  },\n  setup() {\n    useForm();\n    const userid = ref(store.state.header.loginUserId);\n    const password = ref('')\n    return {\n      userid,\n      password,\n      url: \"../assets/bahl-logo.png\",\n    };\n  },\n  methods: {\n    checkPassword(val) {\n      if (val.target.value !== undefined && val.target.value !== '') {\n        val.target.value = val.target.value.trim();\n\n        if (!isPasswordComplete && val.target.value.length === 10) {\n          isPasswordComplete = true;\n\n          this.$store.dispatch('unLockScreen', val.target.value)\n            .then(async (response) => {\n              if (response === true) {\n                this.$store.dispatch('lockScreen', false);\n                val.target.value = '';\n                this.$store.dispatch('savePassword', val.target.value);\n                val.preventDefault();\n                val.stopPropagation();\n              } else {\n                this.resetPassword()\n                this.$store.dispatch('savePassword', val.target.value);\n                await ElMessageBox.alert(response, 'Message', options);\n                val.target.value = '';\n                this.$refs.lock.focus();\n              }\n            })\n            .catch((error) => {\n              console.error(error);\n            });\n        }\n      }\n    },\n    resetPassword() {\n      isPasswordComplete = false;\n    }\n  }\n};\n</script>\n<style scoped>\n.mainHeading {\n  font-family: Arial;\n  font-size: 36px;\n}\n\n.logomain {\n  width: 90%;\n}\n\n.adjustLogin {\n  padding-top: 15%;\n}\n\nfieldset {\n  border-color: black;\n}\n\nlegend {\n  font-family: Arial;\n  font-size: 22px;\n  font-weight: bold;\n}\n</style>\n"],"mappings":"AAoDA,SAASA,GAAE,QAAS,KAAK;AACzB,SAASC,IAAI,EAAEC,OAAM,QAAS,cAAc;AAC5C,OAAOC,KAAI,MAAO,8BAA6B;AAC/C,SAASC,YAAW,QAAS,cAAa;AAC1C,SAASC,OAAM,QAAS,0BAAyB;AACjD,IAAIC,kBAAiB,GAAK,KAAI;AAC9B,eAAe;EACbC,UAAU,EAAE;IACVN;EACF,CAAC;EACDO,KAAKA,CAAA,EAAG;IACNN,OAAO,CAAC,CAAC;IACT,MAAMO,MAAK,GAAIT,GAAG,CAACG,KAAK,CAACO,KAAK,CAACC,MAAM,CAACC,WAAW,CAAC;IAClD,MAAMC,QAAO,GAAIb,GAAG,CAAC,EAAE;IACvB,OAAO;MACLS,MAAM;MACNI,QAAQ;MACRC,GAAG,EAAE;IACP,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAACC,GAAG,EAAE;MACjB,IAAIA,GAAG,CAACC,MAAM,CAACC,KAAI,KAAMC,SAAQ,IAAKH,GAAG,CAACC,MAAM,CAACC,KAAI,KAAM,EAAE,EAAE;QAC7DF,GAAG,CAACC,MAAM,CAACC,KAAI,GAAIF,GAAG,CAACC,MAAM,CAACC,KAAK,CAACE,IAAI,CAAC,CAAC;QAE1C,IAAI,CAACf,kBAAiB,IAAKW,GAAG,CAACC,MAAM,CAACC,KAAK,CAACG,MAAK,KAAM,EAAE,EAAE;UACzDhB,kBAAiB,GAAI,IAAI;UAEzB,IAAI,CAACiB,MAAM,CAACC,QAAQ,CAAC,cAAc,EAAEP,GAAG,CAACC,MAAM,CAACC,KAAK,EAClDM,IAAI,CAAC,MAAOC,QAAQ,IAAK;YACxB,IAAIA,QAAO,KAAM,IAAI,EAAE;cACrB,IAAI,CAACH,MAAM,CAACC,QAAQ,CAAC,YAAY,EAAE,KAAK,CAAC;cACzCP,GAAG,CAACC,MAAM,CAACC,KAAI,GAAI,EAAE;cACrB,IAAI,CAACI,MAAM,CAACC,QAAQ,CAAC,cAAc,EAAEP,GAAG,CAACC,MAAM,CAACC,KAAK,CAAC;cACtDF,GAAG,CAACU,cAAc,CAAC,CAAC;cACpBV,GAAG,CAACW,eAAe,CAAC,CAAC;YACvB,OAAO;cACL,IAAI,CAACC,aAAa,CAAC;cACnB,IAAI,CAACN,MAAM,CAACC,QAAQ,CAAC,cAAc,EAAEP,GAAG,CAACC,MAAM,CAACC,KAAK,CAAC;cACtD,MAAMf,YAAY,CAAC0B,KAAK,CAACJ,QAAQ,EAAE,SAAS,EAAErB,OAAO,CAAC;cACtDY,GAAG,CAACC,MAAM,CAACC,KAAI,GAAI,EAAE;cACrB,IAAI,CAACY,KAAK,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC;YACzB;UACF,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAK;YAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;UACtB,CAAC,CAAC;QACN;MACF;IACF,CAAC;IACDN,aAAaA,CAAA,EAAG;MACdvB,kBAAiB,GAAI,KAAK;IAC5B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
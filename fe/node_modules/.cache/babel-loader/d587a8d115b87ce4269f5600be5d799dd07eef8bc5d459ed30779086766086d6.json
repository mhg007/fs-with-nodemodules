{"ast":null,"code":"import Keycloak from 'keycloak-js';\nimport { reactive, toRefs } from 'vue';\nimport jwtDecode from 'jwt-decode';\nconst state = reactive({\n  isAuthenticated: false,\n  hasFailed: false,\n  isPending: false,\n  token: '',\n  decodedToken: {},\n  username: '',\n  roles: [],\n  resourceRoles: {}\n});\nconst setToken = token => {\n  state.token = token;\n  const content = jwtDecode(state.token);\n  state.decodedToken = content;\n  state.roles = content.realm_access.roles;\n  state.username = content.preferred_username;\n  state.resourceRoles = content.resource_access ? Object.fromEntries(Object.entries(content.resource_access).map(([key, value]) => [key, value.roles])) : {};\n};\nconst hasFailed = value => {\n  state.hasFailed = value;\n};\nconst isPending = value => {\n  state.isPending = value;\n};\nconst isAuthenticated = value => {\n  state.isAuthenticated = value;\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nfunction isPromise(promise) {\n  return !isNil(promise) && typeof promise.then === 'function';\n}\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nfunction isFunction(fun) {\n  return !isNil(fun) && typeof fun === 'function';\n}\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nfunction isString(text) {\n  return !isNil(text) && (typeof text === 'string' || text instanceof String);\n}\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nfunction isNil(value) {\n  return value === undefined || value === null;\n}\nlet $keycloak = undefined;\nasync function isTokenReady() {\n  return new Promise(resolve => checkToken(resolve));\n}\nconst checkToken = resolve => {\n  if (!isNil($keycloak) && !isNil($keycloak.token)) {\n    resolve();\n  } else {\n    setTimeout(() => checkToken(resolve), 500);\n  }\n};\nfunction getKeycloak() {\n  return $keycloak;\n}\nasync function getToken() {\n  return updateToken();\n}\nasync function updateToken() {\n  if (!$keycloak) {\n    throw new Error('Keycloak is not initialized.');\n  }\n  try {\n    await $keycloak.updateToken(10);\n    setToken($keycloak.token);\n  } catch (error) {\n    hasFailed(true);\n    throw new Error('Failed to refresh the token, or the session has expired');\n  }\n  return $keycloak.token;\n}\nfunction createKeycloak(config) {\n  $keycloak = Keycloak(config);\n  return getKeycloak();\n}\nasync function initKeycloak(initConfig) {\n  try {\n    isPending(true);\n    const _isAuthenticated = await $keycloak.init(initConfig);\n    isAuthenticated(_isAuthenticated);\n    if (!isNil($keycloak.token)) {\n      setToken($keycloak.token);\n    }\n    $keycloak.onAuthRefreshSuccess = () => setToken($keycloak.token);\n    $keycloak.onTokenExpired = () => updateToken();\n  } catch (error) {\n    hasFailed(true);\n    isAuthenticated(false);\n    throw new Error('Could not read access token');\n  } finally {\n    isPending(false);\n  }\n}\nconst useKeycloak = () => {\n  return Object.assign(Object.assign({}, toRefs(state)), {\n    keycloak: getKeycloak(),\n    hasRoles: roles => !isNil(roles) && state.isAuthenticated && roles.every(role => state.roles.includes(role)),\n    hasResourceRoles: (roles, resource) => !isNil(roles) && !isNil(resource) && state.isAuthenticated && roles.every(role => state.resourceRoles[resource].includes(role))\n  });\n};\nconst defaultInitConfig = {\n  flow: 'standard',\n  checkLoginIframe: false,\n  onLoad: 'login-required'\n};\nfunction loadJsonConfig(url) {\n  return new Promise((resolve, reject) => {\n    const xhttp = new XMLHttpRequest();\n    xhttp.overrideMimeType('application/json');\n    xhttp.onreadystatechange = function () {\n      if (this.readyState == 4 && this.status == 200) {\n        const jsonResponse = this.responseText;\n        const response = JSON.parse(jsonResponse);\n        resolve(response);\n      } else {\n        reject('Could not load ' + url + ' file');\n      }\n    };\n    xhttp.open('GET', url, true);\n    xhttp.send();\n  });\n}\nconst vueKeycloak = {\n  async install(app, options) {\n    if (isNil(options)) {\n      throw new Error('The Keycloak.KeycloakConfig are requried');\n    }\n    let keycloakPluginConfig;\n    if (isString(options)) {\n      keycloakPluginConfig = await loadJsonConfig(options);\n    } else if (isPromise(options) || isFunction(options)) {\n      keycloakPluginConfig = await options();\n    } else {\n      keycloakPluginConfig = options;\n    }\n    const keycloakConfig = keycloakPluginConfig.config;\n    const keycloakInitOptions = !isNil(keycloakPluginConfig.initOptions) ? Object.assign(Object.assign({}, defaultInitConfig), keycloakPluginConfig.initOptions) : defaultInitConfig;\n    const _keycloak = createKeycloak(keycloakConfig);\n    app.config.globalProperties.$keycloak = _keycloak;\n    await initKeycloak(keycloakInitOptions);\n  }\n};\nexport { getKeycloak, getToken, isTokenReady, useKeycloak, vueKeycloak };","map":{"version":3,"names":["state","reactive","isAuthenticated","hasFailed","isPending","token","decodedToken","username","roles","resourceRoles","setToken","content","jwtDecode","realm_access","preferred_username","resource_access","Object","fromEntries","entries","map","key","value","isPromise","promise","isNil","then","isFunction","fun","isString","text","String","undefined","$keycloak","isTokenReady","Promise","resolve","checkToken","setTimeout","getKeycloak","getToken","updateToken","Error","error","createKeycloak","config","Keycloak","initKeycloak","initConfig","_isAuthenticated","init","onAuthRefreshSuccess","onTokenExpired","useKeycloak","assign","toRefs","keycloak","hasRoles","every","role","includes","hasResourceRoles","resource","defaultInitConfig","flow","checkLoginIframe","onLoad","loadJsonConfig","url","reject","xhttp","XMLHttpRequest","overrideMimeType","onreadystatechange","readyState","status","jsonResponse","responseText","response","JSON","parse","open","send","vueKeycloak","install","app","options","keycloakPluginConfig","keycloakConfig","keycloakInitOptions","initOptions","_keycloak","globalProperties"],"sources":["../dist-transpiled/state.js","../dist-transpiled/utils.js","../dist-transpiled/keycloak.js","../dist-transpiled/composable.js","../dist-transpiled/const.js","../dist-transpiled/config.js","../dist-transpiled/plugin.js"],"sourcesContent":["import { reactive } from 'vue';\nimport jwtDecode from 'jwt-decode';\nexport const state = reactive({\n    isAuthenticated: false,\n    hasFailed: false,\n    isPending: false,\n    token: '',\n    decodedToken: {},\n    username: '',\n    roles: [],\n    resourceRoles: {},\n});\nexport const setToken = (token) => {\n    state.token = token;\n    const content = jwtDecode(state.token);\n    state.decodedToken = content;\n    state.roles = content.realm_access.roles;\n    state.username = content.preferred_username;\n    state.resourceRoles = content.resource_access ? Object.fromEntries(Object.entries(content.resource_access).map(([key, value]) => [key, value.roles])) : {};\n};\nexport const hasFailed = (value) => {\n    state.hasFailed = value;\n};\nexport const isPending = (value) => {\n    state.isPending = value;\n};\nexport const isAuthenticated = (value) => {\n    state.isAuthenticated = value;\n};\n//# sourceMappingURL=state.js.map","// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function isPromise(promise) {\n    return !isNil(promise) && typeof promise.then === 'function';\n}\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function isFunction(fun) {\n    return !isNil(fun) && typeof fun === 'function';\n}\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function isString(text) {\n    return !isNil(text) && (typeof text === 'string' || text instanceof String);\n}\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function isNil(value) {\n    return value === undefined || value === null;\n}\n//# sourceMappingURL=utils.js.map","import Keycloak from 'keycloak-js';\nimport { hasFailed, isAuthenticated, isPending, setToken } from './state';\nimport { isNil } from './utils';\nlet $keycloak = undefined;\nexport async function isTokenReady() {\n    return new Promise(resolve => checkToken(resolve));\n}\nconst checkToken = (resolve) => {\n    if (!isNil($keycloak) && !isNil($keycloak.token)) {\n        resolve();\n    }\n    else {\n        setTimeout(() => checkToken(resolve), 500);\n    }\n};\nexport function getKeycloak() {\n    return $keycloak;\n}\nexport async function getToken() {\n    return updateToken();\n}\nexport async function isLoggedIn() {\n    try {\n        if (!$keycloak.authenticated) {\n            return false;\n        }\n        await this.updateToken();\n        return true;\n    }\n    catch (error) {\n        return false;\n    }\n}\nexport async function updateToken() {\n    if (!$keycloak) {\n        throw new Error('Keycloak is not initialized.');\n    }\n    try {\n        await $keycloak.updateToken(10);\n        setToken($keycloak.token);\n    }\n    catch (error) {\n        hasFailed(true);\n        throw new Error('Failed to refresh the token, or the session has expired');\n    }\n    return $keycloak.token;\n}\nexport function createKeycloak(config) {\n    $keycloak = Keycloak(config);\n    return getKeycloak();\n}\nexport async function initKeycloak(initConfig) {\n    try {\n        isPending(true);\n        const _isAuthenticated = await $keycloak.init(initConfig);\n        isAuthenticated(_isAuthenticated);\n        if (!isNil($keycloak.token)) {\n            setToken($keycloak.token);\n        }\n        $keycloak.onAuthRefreshSuccess = () => setToken($keycloak.token);\n        $keycloak.onTokenExpired = () => updateToken();\n    }\n    catch (error) {\n        hasFailed(true);\n        isAuthenticated(false);\n        throw new Error('Could not read access token');\n    }\n    finally {\n        isPending(false);\n    }\n}\n//# sourceMappingURL=keycloak.js.map","import { toRefs } from 'vue';\nimport { getKeycloak } from './keycloak';\nimport { state } from './state';\nimport { isNil } from './utils';\nexport const useKeycloak = () => {\n    return Object.assign(Object.assign({}, toRefs(state)), { keycloak: getKeycloak(), hasRoles: (roles) => !isNil(roles) && state.isAuthenticated && roles.every(role => state.roles.includes(role)), hasResourceRoles: (roles, resource) => !isNil(roles) &&\n            !isNil(resource) &&\n            state.isAuthenticated &&\n            roles.every(role => state.resourceRoles[resource].includes(role)) });\n};\n//# sourceMappingURL=composable.js.map","export const defaultInitConfig = {\n    flow: 'standard',\n    checkLoginIframe: false,\n    onLoad: 'login-required',\n};\n//# sourceMappingURL=const.js.map","export function loadJsonConfig(url) {\n    return new Promise((resolve, reject) => {\n        const xhttp = new XMLHttpRequest();\n        xhttp.overrideMimeType('application/json');\n        xhttp.onreadystatechange = function () {\n            if (this.readyState == 4 && this.status == 200) {\n                const jsonResponse = this.responseText;\n                const response = JSON.parse(jsonResponse);\n                resolve(response);\n            }\n            else {\n                reject('Could not load ' + url + ' file');\n            }\n        };\n        xhttp.open('GET', url, true);\n        xhttp.send();\n    });\n}\n//# sourceMappingURL=config.js.map","import { defaultInitConfig } from './const';\nimport { createKeycloak, initKeycloak } from './keycloak';\nimport { isPromise, isFunction, isNil, isString } from './utils';\nimport { loadJsonConfig } from './config';\nexport const vueKeycloak = {\n    async install(app, options) {\n        if (isNil(options)) {\n            throw new Error('The Keycloak.KeycloakConfig are requried');\n        }\n        let keycloakPluginConfig;\n        if (isString(options)) {\n            keycloakPluginConfig = await loadJsonConfig(options);\n        }\n        else if (isPromise(options) || isFunction(options)) {\n            keycloakPluginConfig = await options();\n        }\n        else {\n            keycloakPluginConfig = options;\n        }\n        const keycloakConfig = keycloakPluginConfig.config;\n        const keycloakInitOptions = !isNil(keycloakPluginConfig.initOptions)\n            ? Object.assign(Object.assign({}, defaultInitConfig), keycloakPluginConfig.initOptions) : defaultInitConfig;\n        const _keycloak = createKeycloak(keycloakConfig);\n        app.config.globalProperties.$keycloak = _keycloak;\n        await initKeycloak(keycloakInitOptions);\n    },\n};\n//# sourceMappingURL=plugin.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
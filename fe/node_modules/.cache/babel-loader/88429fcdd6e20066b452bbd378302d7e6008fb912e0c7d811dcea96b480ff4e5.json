{"ast":null,"code":"import { computed, nextTick } from 'vue';\nimport screenLock from '../views/LockScreen.vue';\nimport { useStore } from \"vuex\";\nexport default {\n  components: {\n    screenLock\n  },\n  setup() {\n    const store = useStore();\n    let dialogVisible = computed(function () {\n      return store.getters.getLockScreenVisibility;\n    });\n    return {\n      dialogVisible\n    };\n  },\n  methods: {\n    openDialog() {\n      nextTick(() => {\n        this.$refs.lockScreen.$refs.lock.input.value = '';\n        this.$refs.lockScreen.$refs.lock.focus();\n      });\n      let dia = document.getElementsByClassName('el-dialog');\n      dia[0].setAttribute('id', 'exampleModal');\n      const focusableElements = 'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])';\n      const modal = document.querySelector('#exampleModal'); // select the modal by it's id\n\n      const firstFocusableElement = modal.querySelectorAll(focusableElements)[0]; // get first element to be focused inside modal\n      const focusableContent = modal.querySelectorAll(focusableElements);\n      const lastFocusableElement = focusableContent[focusableContent.length - 1]; // get last element to be focused inside modal\n\n      document.addEventListener('keydown', function (e) {\n        let isTabPressed = e.key === 'Tab' || e.keyCode === 9;\n        if (!isTabPressed) {\n          return;\n        }\n        if (e.shiftKey) {\n          // if shift key pressed for shift + tab combination\n          if (document.activeElement === firstFocusableElement) {\n            lastFocusableElement.focus(); // add focus for the last focusable element\n            e.preventDefault();\n          }\n        } else {\n          // if tab key is pressed\n          if (document.activeElement === lastFocusableElement) {\n            // if focused has reached to last focusable element then focus first focusable element after pressing tab\n            firstFocusableElement.focus(); // add focus for the first focusable element\n            e.preventDefault();\n          }\n        }\n      });\n      firstFocusableElement.focus();\n    }\n  }\n};","map":{"version":3,"names":["computed","nextTick","screenLock","useStore","components","setup","store","dialogVisible","getters","getLockScreenVisibility","methods","openDialog","$refs","lockScreen","lock","input","value","focus","dia","document","getElementsByClassName","setAttribute","focusableElements","modal","querySelector","firstFocusableElement","querySelectorAll","focusableContent","lastFocusableElement","length","addEventListener","e","isTabPressed","key","keyCode","shiftKey","activeElement","preventDefault"],"sources":["/home/bahl/MinhajMeraj/Dev Work/Frontend/Portals/EPRC/UseCases/tlr_eprc_sprc_inq_uc3_rpt_eprc/fe/src/components/lockScreenDialog.vue"],"sourcesContent":["<template>\n     <el-dialog @opened=\"openDialog\" v-model=\"dialogVisible\" fullscreen :initial-focus=\"'#lock'\" :show-close=\"false\" :lock-scroll=\"true\" :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\">\n      <screenLock ref=\"lockScreen\" />\n    </el-dialog>\n</template>\n<script>\nimport { computed, nextTick } from 'vue'\nimport screenLock from '../views/LockScreen.vue'\nimport { useStore } from \"vuex\";\nexport default {\n    components: {\n    screenLock,\n  },\n  setup(){\n    const store = useStore();\n    let dialogVisible = computed(function(){\n        return store.getters.getLockScreenVisibility\n    })\n    return{\n        dialogVisible,\n    }\n  },\n  methods:{\n    openDialog() {\n      nextTick(()=>{\n        this.$refs.lockScreen.$refs.lock.input.value=''\n        this.$refs.lockScreen.$refs.lock.focus()\n      })\n      let dia = document.getElementsByClassName('el-dialog')\n      dia[0].setAttribute('id','exampleModal')\n      const focusableElements =\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])';\n      const modal = document.querySelector('#exampleModal'); // select the modal by it's id\n\n      const firstFocusableElement = modal.querySelectorAll(focusableElements)[0]; // get first element to be focused inside modal\n      const focusableContent = modal.querySelectorAll(focusableElements);\n      const lastFocusableElement = focusableContent[focusableContent.length - 1]; // get last element to be focused inside modal\n\n\n      document.addEventListener('keydown', function (e) {\n        let isTabPressed = e.key === 'Tab' || e.keyCode === 9;\n\n        if (!isTabPressed) {\n          return;\n        }\n\n        if (e.shiftKey) { // if shift key pressed for shift + tab combination\n          if (document.activeElement === firstFocusableElement) {\n            lastFocusableElement.focus(); // add focus for the last focusable element\n            e.preventDefault();\n          }\n        } else { // if tab key is pressed\n          if (document.activeElement === lastFocusableElement) { // if focused has reached to last focusable element then focus first focusable element after pressing tab\n            firstFocusableElement.focus(); // add focus for the first focusable element\n            e.preventDefault();\n          }\n        }\n      });\n\n      firstFocusableElement.focus();\n    },\n\n  },\n}\n</script>"],"mappings":"AAOA,SAASA,QAAQ,EAAEC,QAAO,QAAS,KAAI;AACvC,OAAOC,UAAS,MAAO,yBAAwB;AAC/C,SAASC,QAAO,QAAS,MAAM;AAC/B,eAAe;EACXC,UAAU,EAAE;IACZF;EACF,CAAC;EACDG,KAAKA,CAAA,EAAE;IACL,MAAMC,KAAI,GAAIH,QAAQ,CAAC,CAAC;IACxB,IAAII,aAAY,GAAIP,QAAQ,CAAC,YAAU;MACnC,OAAOM,KAAK,CAACE,OAAO,CAACC,uBAAsB;IAC/C,CAAC;IACD,OAAM;MACFF;IACJ;EACF,CAAC;EACDG,OAAO,EAAC;IACNC,UAAUA,CAAA,EAAG;MACXV,QAAQ,CAAC,MAAI;QACX,IAAI,CAACW,KAAK,CAACC,UAAU,CAACD,KAAK,CAACE,IAAI,CAACC,KAAK,CAACC,KAAK,GAAC,EAAC;QAC9C,IAAI,CAACJ,KAAK,CAACC,UAAU,CAACD,KAAK,CAACE,IAAI,CAACG,KAAK,CAAC;MACzC,CAAC;MACD,IAAIC,GAAE,GAAIC,QAAQ,CAACC,sBAAsB,CAAC,WAAW;MACrDF,GAAG,CAAC,CAAC,CAAC,CAACG,YAAY,CAAC,IAAI,EAAC,cAAc;MACvC,MAAMC,iBAAgB,GACpB,0EAA0E;MAC5E,MAAMC,KAAI,GAAIJ,QAAQ,CAACK,aAAa,CAAC,eAAe,CAAC,EAAE;;MAEvD,MAAMC,qBAAoB,GAAIF,KAAK,CAACG,gBAAgB,CAACJ,iBAAiB,CAAC,CAAC,CAAC,CAAC,EAAE;MAC5E,MAAMK,gBAAe,GAAIJ,KAAK,CAACG,gBAAgB,CAACJ,iBAAiB,CAAC;MAClE,MAAMM,oBAAmB,GAAID,gBAAgB,CAACA,gBAAgB,CAACE,MAAK,GAAI,CAAC,CAAC,EAAE;;MAG5EV,QAAQ,CAACW,gBAAgB,CAAC,SAAS,EAAE,UAAUC,CAAC,EAAE;QAChD,IAAIC,YAAW,GAAID,CAAC,CAACE,GAAE,KAAM,KAAI,IAAKF,CAAC,CAACG,OAAM,KAAM,CAAC;QAErD,IAAI,CAACF,YAAY,EAAE;UACjB;QACF;QAEA,IAAID,CAAC,CAACI,QAAQ,EAAE;UAAE;UAChB,IAAIhB,QAAQ,CAACiB,aAAY,KAAMX,qBAAqB,EAAE;YACpDG,oBAAoB,CAACX,KAAK,CAAC,CAAC,EAAE;YAC9Bc,CAAC,CAACM,cAAc,CAAC,CAAC;UACpB;QACF,OAAO;UAAE;UACP,IAAIlB,QAAQ,CAACiB,aAAY,KAAMR,oBAAoB,EAAE;YAAE;YACrDH,qBAAqB,CAACR,KAAK,CAAC,CAAC,EAAE;YAC/Bc,CAAC,CAACM,cAAc,CAAC,CAAC;UACpB;QACF;MACF,CAAC,CAAC;MAEFZ,qBAAqB,CAACR,KAAK,CAAC,CAAC;IAC/B;EAEF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}
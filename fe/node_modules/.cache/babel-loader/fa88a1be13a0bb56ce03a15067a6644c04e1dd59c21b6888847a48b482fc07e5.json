{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_MegaSet8 = _resolveComponent(\"MegaSet8\");\n  return _openBlock(), _createBlock(_component_MegaSet8, {\n    configObj: $options.configurationObject,\n    onPasswordTextBoxOnBlur: $options.passwordTextBoxBlurHandler,\n    onOnSubmit: $options.onSubmit,\n    onBackButtonOnClick: $options.backButtonClickHandler\n  }, null, 8 /* PROPS */, [\"configObj\", \"onPasswordTextBoxOnBlur\", \"onOnSubmit\", \"onBackButtonOnClick\"]);\n}","map":{"version":3,"names":["_createBlock","_component_MegaSet8","configObj","$options","configurationObject","onPasswordTextBoxOnBlur","passwordTextBoxBlurHandler","onOnSubmit","onSubmit","onBackButtonOnClick","backButtonClickHandler"],"sources":["/home/bahl/MinhajMeraj/Dev Work/Frontend/Portals/EPRC/UseCases/tlr_eprc_sprc_inq_uc3_rpt_eprc/fe/src/UseCase/BCH_OPN_UC1_OpenBatch/MS8UseCase.vue"],"sourcesContent":["<template>\n  <MegaSet8 :configObj=\"configurationObject\" @PasswordTextBox-onBlur=\"passwordTextBoxBlurHandler\" @onSubmit=\"onSubmit\"\n    @BackButton-onClick=\"backButtonClickHandler\" />\n</template>\n<script>\nimport MegaSet8 from \"@teresol/mega-set8\";\nimport { reactive, defineAsyncComponent } from \"vue\";\n// const MegaSet8 = defineAsyncComponent(() =>\n//   import('@teresol/mega-set8')\n// )\nexport default {\n  components: {\n    MegaSet8,\n  },\n\n  mounted() {\n    this.$nextTick(() => {\n      // // const temp = document.forms;\n      // console.log(\"document.getElementById: \", document.getElementById(\"PasswordTextBox\"))\n      // // console.log(\"document.forms.item \", temp.length);\n\n      // let passwordTextBoxElem = document.getElementById(\"PasswordTextBox\");\n      // passwordTextBoxElem.focus();\n\n      // console.log(\"MegaSet8 : \", document.forms);\n      let frmElem = document.forms[0];\n      let pswElem = frmElem.elements[1];\n      pswElem.focus();\n    });\n    // console.log(\"Password Box : \",pswElem);\n    // let passwordTextBoxElem = document.getElementById(\"PasswordTextBox\");\n    // passwordTextBoxElem.setAttribute(\"autocomplete\",\"off\");\n    // passwordTextBoxElem.setAttribute(\"readonly\",\"readonly\");\n    // passwordTextBoxElem.addEventListener(\"focus\",function(){\n    //   this.removeAttribute(\"readonly\");\n    // })\n    // passwordTextBoxElem.focus();\n\n  },\n\n  computed: {\n    //------------------Getters Call-------------------\n    configurationObject() {\n      return reactive(\n        this.$store.getters[\"BCH_OPN_UC1_OpenBatch/gettersMegaSet8ConfigObj\"]\n      );\n    },\n  },\n\n  methods: {\n    onSubmit(value) {\n      this.$store.dispatch(\"BCH_OPN_UC1_OpenBatch/MS8PasswordTextBox\", value.PasswordTextBox);\n\n      this.$store\n        .dispatch(\"BCH_OPN_UC1_OpenBatch/MS8OkButtonEvent\", value.PasswordTextBox)\n        .then((response) => {\n          if (response) {\n            this.$router.push({ name: \"BCH_OPN_UC1_OpenBatch_SuperSet12\" });\n          } else {\n            document.getElementById('PasswordTextBox').value = '';\n          }\n        });\n    },\n    passwordTextBoxBlurHandler(val) {\n      //this.$store.dispatch(\"BCH_OPN_UC1_OpenBatch/MS8PasswordTextBox\", val);\n    },\n    backButtonClickHandler() {\n      this.$store\n        .dispatch(\"BCH_OPN_UC1_OpenBatch/BackButtonEvent\")\n        .then((response) => {\n          if (response) this.$router.push({ name: \"Teller\" });\n        });\n    },\n  },\n  setup() {\n    return reactive({});\n  },\n};\n</script>\n"],"mappings":";;;uBACEA,YAAA,CACiDC,mBAAA;IADtCC,SAAS,EAAEC,QAAA,CAAAC,mBAAmB;IAAGC,uBAAsB,EAAEF,QAAA,CAAAG,0BAA0B;IAAGC,UAAQ,EAAEJ,QAAA,CAAAK,QAAQ;IAChHC,mBAAkB,EAAEN,QAAA,CAAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
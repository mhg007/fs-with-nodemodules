const WINSTON = require("winston");

const LOG_FORMAT = (file) => {
	return WINSTON.format.combine(
		WINSTON.format.align(),
		WINSTON.format.timestamp({ format: "DD-MM-YYYY T hh:mm:ss.sss A" }),
		WINSTON.format.label({ label: file }),
		WINSTON.format.printf(({ timestamp, level, message, label }) => {
			return `[ ${timestamp} | ${level.toUpperCase()} | LOG:${message} | ${label}]`;
		})
	);
};

/**
 * Returns a logger for a given file. 
 * 
 * @example
 * const { getLogger } = require("@fsm/fsm");
 * const logger = getLogger("server.js");
 * logger.info(`Example app listening at ${process.env.FSM}:${process.env.PORT}`);
 * 
 * @param {string} file - name of the file
 * @returns {import("winston").Logger} Winston logger
 */
const getLogger = (file) => {
	const logger =  WINSTON.createLogger({
		level: "info",
		format: LOG_FORMAT(file),
		transports: [new WINSTON.transports.Console()],
	});
	if(process.env.NODE_ENV === "development") {
		logger.level = "debug";
	}
	return logger;
};

module.exports = { getLogger };
